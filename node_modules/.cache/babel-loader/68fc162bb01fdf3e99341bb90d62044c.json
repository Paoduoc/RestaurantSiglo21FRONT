{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Draki\\\\Desktop\\\\Front\\\\Restaurant-front\\\\src\\\\components\\\\TableCrud\\\\TableList.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { enableTable, getAllTables } from '../../services/tableService';\nimport Button from 'react-bootstrap/Button';\nimport Switch from \"react-switch\";\nimport { useDispatch, useSelector } from 'react-redux';\nimport { setAllTables, setFormType, setModalCrudVisibility, setSelectedTable } from '../../store/slices/tableSlice';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const TableList = () => {\n  _s();\n\n  const dispatch = useDispatch();\n  const {\n    allTables\n  } = useSelector(state => state.table);\n\n  const handleShow = selectedTable => {\n    dispatch(setSelectedTable(selectedTable));\n    dispatch(setModalCrudVisibility(true));\n    dispatch(setFormType('edit'));\n  };\n\n  const handleGetAllTables = async () => {\n    // desde la bodega sacamos los tableos con sus gramos\n    const responseTable = await getAllTables();\n\n    if (responseTable.status === 200) {\n      dispatch(setAllTables(responseTable.msg));\n    }\n  };\n\n  const handleStatusTable = async table => {\n    await enableTable({\n      status: !table.estado,\n      _id: table._id\n    });\n    handleGetAllTables();\n  };\n\n  useEffect(() => {\n    handleGetAllTables();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"table table-primary table-striped\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            scope: \"col\",\n            children: \"Mesa Numero\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            scope: \"col\",\n            children: \"Cantidad Sillas\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            scope: \"col\",\n            children: \"Editar\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            scope: \"col\",\n            children: \"Activar/Desactivar\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: allTables.map(t => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: t.numMesa\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: t.cantSillas\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"primary\",\n              onClick: () => handleShow(t),\n              children: \"Editar\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 60,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: /*#__PURE__*/_jsxDEV(Switch, {\n              onChange: () => handleStatusTable(t),\n              checked: t.estado\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 65,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 17\n          }, this)]\n        }, t._id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n\n_s(TableList, \"ZdT75gfJHq9S9wb4ZFwn15QRSoA=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = TableList;\n\nvar _c;\n\n$RefreshReg$(_c, \"TableList\");","map":{"version":3,"names":["React","useEffect","useState","enableTable","getAllTables","Button","Switch","useDispatch","useSelector","setAllTables","setFormType","setModalCrudVisibility","setSelectedTable","TableList","dispatch","allTables","state","table","handleShow","selectedTable","handleGetAllTables","responseTable","status","msg","handleStatusTable","estado","_id","map","t","numMesa","cantSillas"],"sources":["C:/Users/Draki/Desktop/Front/Restaurant-front/src/components/TableCrud/TableList.js"],"sourcesContent":["import React, { useEffect, useState } from 'react'\r\nimport { enableTable, getAllTables } from '../../services/tableService'\r\nimport Button from 'react-bootstrap/Button';\r\nimport Switch from \"react-switch\";\r\nimport { useDispatch, useSelector, } from 'react-redux';\r\nimport { setAllTables, setFormType, setModalCrudVisibility, setSelectedTable } from '../../store/slices/tableSlice';\r\n\r\nexport const TableList = () => {\r\n\r\n  const dispatch = useDispatch()\r\n\r\n  const { allTables } = useSelector((state) => state.table)\r\n\r\n  const handleShow = (selectedTable) => {\r\n    dispatch(setSelectedTable(selectedTable))\r\n    dispatch(setModalCrudVisibility(true))\r\n    dispatch(setFormType('edit'))\r\n  }\r\n\r\n  const handleGetAllTables = async () => {\r\n    // desde la bodega sacamos los tableos con sus gramos\r\n    const responseTable = await getAllTables()\r\n    \r\n    if (responseTable.status === 200) {\r\n      dispatch(setAllTables(responseTable.msg))\r\n    }\r\n  }\r\n\r\n  const handleStatusTable = async (table) => {\r\n    await enableTable({\r\n      status: !table.estado,\r\n      _id: table._id\r\n    })\r\n    handleGetAllTables()\r\n  }\r\n\r\n  useEffect(() => {\r\n    handleGetAllTables()\r\n  }, [])\r\n  \r\n\r\n  return (\r\n    <>\r\n      <table className=\"table table-primary table-striped\">\r\n        <thead>\r\n          <tr>\r\n            <th scope=\"col\">Mesa Numero</th>\r\n            <th scope=\"col\">Cantidad Sillas</th>\r\n            <th scope=\"col\">Editar</th>\r\n            <th scope=\"col\">Activar/Desactivar</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {\r\n            allTables.map(t => (\r\n              <tr key={ t._id }>\r\n                <td>{ t.numMesa }</td>\r\n                <td>{ t.cantSillas }</td>\r\n                <td>\r\n                  <Button variant=\"primary\" onClick={() => handleShow(t)}>\r\n                    Editar\r\n                  </Button>\r\n                </td>\r\n                <td>\r\n                  <Switch onChange={() => handleStatusTable(t)} checked={t.estado} />\r\n                </td>\r\n              </tr>\r\n            ))\r\n          }\r\n        </tbody>\r\n      </table>\r\n    </>\r\n  )\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}