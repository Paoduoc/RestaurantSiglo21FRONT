{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Draki\\\\Desktop\\\\Front\\\\Restaurant-front\\\\src\\\\components\\\\Commands\\\\CommandStatusDialog.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { useAlert } from 'react-alert';\nimport Modal from 'react-bootstrap/Modal';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { setModalOpen, resetSelectedCommand, setAllCommands } from '../../store/slices/commandSlice';\nimport { saveCommandStatus } from '../../services/commandService';\nimport { getAllCommands } from '../../services/commandService';\nimport { getDishe } from '../../services/disheService';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const CommandStatusDialog = _ref => {\n  _s();\n\n  let {\n    options\n  } = _ref;\n  const dispatch = useDispatch();\n  const alert = useAlert();\n  const [selectedState, setSelectedState] = useState('');\n  const {\n    modal,\n    selectedCommand\n  } = useSelector(state => state.command);\n  useEffect(() => {\n    setSelectedState(options.includes(selectedCommand.estadoPedido) ? selectedCommand.estadoPedido : '');\n  }, [options, selectedCommand]);\n\n  const handleClose = () => {\n    dispatch(setModalOpen(false));\n    dispatch(resetSelectedCommand());\n  };\n\n  const handleSetSelectedState = event => {\n    setSelectedState(event.target.value);\n  };\n\n  const handleSaveCommandStatus = async () => {\n    if (selectedState === '') {\n      alert.show(`Debes seleccionar una opcion`, {\n        type: 'error'\n      });\n      return;\n    }\n\n    const response = await saveCommandStatus({\n      _id: selectedCommand.pedidoId,\n      status: selectedState\n    });\n    console.log(response);\n\n    if (response.status >= 200 && response.status < 300) {\n      handleGetAllCommands();\n      handleClose();\n      alert.show(`Comanda actualizada exitosamente!`, {\n        type: 'success'\n      });\n    }\n  };\n\n  const handleGetAllCommands = async () => {\n    const response = await getAllCommands();\n\n    if (response.status === 200) {\n      for (let i = 0; i < response.msg.length; i++) {\n        response.msg[i].plato = await handleGetDishe(response.msg[i]);\n      }\n\n      dispatch(setAllCommands(response.msg));\n    }\n  };\n\n  const handleGetDishe = async order => {\n    if (!order.plato) return;\n    const response = await getDishe(order.plato._id);\n\n    if (response.status === 200) {\n      return response.msg;\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(Modal, {\n    show: modal.isOpen,\n    onHide: handleClose,\n    children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n      closeButton: true,\n      children: /*#__PURE__*/_jsxDEV(Modal.Title, {\n        children: \"Cambiar el estado del pedido\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n      children: /*#__PURE__*/_jsxDEV(Form.Select, {\n        value: selectedState,\n        onChange: handleSetSelectedState,\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          children: \"Seleccione una opcion\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 11\n        }, this), options.map(state => /*#__PURE__*/_jsxDEV(\"option\", {\n          children: state\n        }, state, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 15\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Modal.Footer, {\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"success\",\n        onClick: handleSaveCommandStatus,\n        children: \"Guardar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 75,\n    columnNumber: 5\n  }, this);\n};\n\n_s(CommandStatusDialog, \"V4BgSCVXWYotzs4YISdhy1O9HM4=\", false, function () {\n  return [useDispatch, useAlert, useSelector];\n});\n\n_c = CommandStatusDialog;\n\nvar _c;\n\n$RefreshReg$(_c, \"CommandStatusDialog\");","map":{"version":3,"names":["React","useEffect","useState","useAlert","Modal","Form","Button","useDispatch","useSelector","setModalOpen","resetSelectedCommand","setAllCommands","saveCommandStatus","getAllCommands","getDishe","CommandStatusDialog","options","dispatch","alert","selectedState","setSelectedState","modal","selectedCommand","state","command","includes","estadoPedido","handleClose","handleSetSelectedState","event","target","value","handleSaveCommandStatus","show","type","response","_id","pedidoId","status","console","log","handleGetAllCommands","i","msg","length","plato","handleGetDishe","order","isOpen","map"],"sources":["C:/Users/Draki/Desktop/Front/Restaurant-front/src/components/Commands/CommandStatusDialog.js"],"sourcesContent":["import React, { useEffect, useState } from 'react'\r\nimport { useAlert } from 'react-alert'\r\nimport Modal from 'react-bootstrap/Modal';\r\nimport Form from 'react-bootstrap/Form';\r\nimport Button from 'react-bootstrap/Button';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { setModalOpen, resetSelectedCommand, setAllCommands } from '../../store/slices/commandSlice';\r\nimport { saveCommandStatus } from '../../services/commandService'\r\nimport { getAllCommands } from '../../services/commandService'\r\nimport { getDishe } from '../../services/disheService'\r\n\r\n\r\nexport const CommandStatusDialog = ({options}) => {\r\n  const dispatch = useDispatch()\r\n  const alert = useAlert()\r\n\r\n  const [selectedState, setSelectedState] = useState('')\r\n\r\n  const { modal, selectedCommand } = useSelector((state) => state.command)\r\n\r\n  useEffect(() => {\r\n    setSelectedState(options.includes(selectedCommand.estadoPedido) ? selectedCommand.estadoPedido : '')\r\n  }, [options, selectedCommand])\r\n\r\n  const handleClose = () => {\r\n    dispatch(setModalOpen(false))\r\n    dispatch(resetSelectedCommand())\r\n  }\r\n\r\n  const handleSetSelectedState = (event) => {\r\n    setSelectedState(event.target.value)\r\n  }\r\n\r\n  const handleSaveCommandStatus = async () => {\r\n    if (selectedState === '') {\r\n      alert.show(`Debes seleccionar una opcion`, {\r\n        type: 'error'\r\n      })\r\n      return \r\n    }\r\n    const response = await saveCommandStatus({\r\n      _id: selectedCommand.pedidoId,\r\n      status: selectedState\r\n    })\r\n    console.log(response)\r\n    if (response.status >= 200 && response.status < 300) {\r\n      handleGetAllCommands()\r\n      handleClose()\r\n      alert.show(`Comanda actualizada exitosamente!`, {\r\n        type: 'success'\r\n      })\r\n\r\n    }\r\n  }\r\n  \r\n  const handleGetAllCommands = async () => {\r\n    const response = await getAllCommands()\r\n    if (response.status === 200) {\r\n      for (let i = 0; i < response.msg.length; i++) {\r\n        response.msg[i].plato = await handleGetDishe(response.msg[i])\r\n      }\r\n      dispatch(setAllCommands(response.msg))\r\n    }\r\n  }\r\n\r\n  const handleGetDishe = async (order) => {\r\n    if (!order.plato) return\r\n    const response = await getDishe(order.plato._id)\r\n    if (response.status === 200) {\r\n      return response.msg\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Modal show={modal.isOpen} onHide={handleClose}>\r\n      <Modal.Header closeButton>\r\n        <Modal.Title>Cambiar el estado del pedido</Modal.Title>\r\n      </Modal.Header>\r\n      <Modal.Body>\r\n        <Form.Select\r\n          value={selectedState}\r\n          onChange={handleSetSelectedState}\r\n        >\r\n          <option>Seleccione una opcion</option>\r\n          {\r\n            options.map(state => (\r\n              <option key={state}>{state}</option>\r\n            ))\r\n          }\r\n        </Form.Select>\r\n      </Modal.Body>\r\n      <Modal.Footer>\r\n        <Button\r\n          variant='success'\r\n          onClick={handleSaveCommandStatus}\r\n        >\r\n          Guardar\r\n        </Button>\r\n      </Modal.Footer>\r\n\r\n    </Modal>\r\n  )\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}