{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nconst initialState = {\n  plates: [],\n  menu: []\n};\nexport const cartSlice = createSlice({\n  name: 'cart',\n  initialState,\n  reducers: {\n    setPlates: (state, action) => {\n      state.plates = action.payload;\n    },\n    addPlate: (state, action) => {\n      // aqui buscamos el plato por su id\n      const existPlate = state.plates.find(p => p._id === action.payload._id);\n      const existPlateMenu = state.menu.find(p => p._id === action.payload._id);\n\n      if (existPlate) {\n        // si el plato existe entonces solo sumamos la cantidad del plato seleccionado que se quiere comprar\n        existPlate.cantidad++;\n        existPlateMenu.cantidad++;\n      } else {\n        // si no existe entonces lo agregamos con la cantidad en 1\n        state.plates.push({ ...action.payload,\n          cantidad: 1\n        });\n        existPlateMenu.cantidad++;\n      }\n\n      localStorage.setItem('cart', JSON.stringify(state.plates));\n    },\n    removePlate: (state, action) => {\n      const plate = state.plates.find(p => p._id === action.payload);\n      const plateMenu = state.menu.find(p => p._id === action.payload);\n      console.log(plate);\n\n      if (plate.cantidad === 1) {\n        state.plates = state.plates.filter(p => p._id !== action.payload);\n        plateMenu.cantidad--;\n      } else {\n        plate.cantidad--;\n        plateMenu.cantidad--;\n      }\n\n      localStorage.setItem('cart', JSON.stringify(state.plates));\n    },\n    removeAllPlates: state => {\n      state.plates = initialState.plates;\n      localStorage.removeItem('cart');\n    },\n    setMenu: (state, action) => {\n      const info = action.payload.map(info => ({ ...info,\n        cantidad: 0\n      }));\n      state.plates.forEach(plate => {\n        const p = info.find(element => element._id === plate._id);\n        console.log(p);\n\n        if (p) {\n          p.cantidad = plate.cantidad;\n        }\n      });\n      state.menu = info;\n    }\n  }\n});\nexport const {\n  setPlates,\n  addPlate,\n  removePlate,\n  removeAllPlates,\n  setMenu\n} = cartSlice.actions;\nexport default cartSlice.reducer;","map":{"version":3,"names":["createSlice","initialState","plates","menu","cartSlice","name","reducers","setPlates","state","action","payload","addPlate","existPlate","find","p","_id","existPlateMenu","cantidad","push","localStorage","setItem","JSON","stringify","removePlate","plate","plateMenu","console","log","filter","removeAllPlates","removeItem","setMenu","info","map","forEach","element","actions","reducer"],"sources":["C:/Users/Draki/Desktop/Front/Restaurant-front/src/store/slices/cartSlice.js"],"sourcesContent":["import { createSlice } from '@reduxjs/toolkit'\r\n\r\nconst initialState = {\r\n  plates: [],\r\n  menu: []\r\n}\r\n\r\nexport const cartSlice = createSlice({\r\n  name: 'cart',\r\n  initialState,\r\n  reducers: {\r\n    setPlates: (state, action) => {\r\n      state.plates = action.payload\r\n    },\r\n    addPlate: (state, action) => {\r\n      // aqui buscamos el plato por su id\r\n      const existPlate = state.plates.find(p => p._id === action.payload._id)\r\n      const existPlateMenu = state.menu.find(p => p._id === action.payload._id)\r\n      if (existPlate) {\r\n        // si el plato existe entonces solo sumamos la cantidad del plato seleccionado que se quiere comprar\r\n        existPlate.cantidad++\r\n        existPlateMenu.cantidad++\r\n      } else {\r\n        // si no existe entonces lo agregamos con la cantidad en 1\r\n        state.plates.push({\r\n          ...action.payload,\r\n          cantidad: 1\r\n        })\r\n        existPlateMenu.cantidad++\r\n      }\r\n      localStorage.setItem('cart', JSON.stringify(state.plates));\r\n\r\n    },\r\n    removePlate: (state, action) => {\r\n      const plate = state.plates.find(p => p._id === action.payload)\r\n      const plateMenu = state.menu.find(p => p._id === action.payload)\r\n      console.log(plate)\r\n\r\n      if (plate.cantidad === 1) {\r\n        state.plates = state.plates.filter(p => p._id !== action.payload)\r\n        plateMenu.cantidad --\r\n      } else {\r\n        plate.cantidad --\r\n        plateMenu.cantidad --\r\n      }\r\n\r\n      localStorage.setItem('cart', JSON.stringify(state.plates));\r\n\r\n    },\r\n    removeAllPlates: (state) => {\r\n      state.plates = initialState.plates\r\n      localStorage.removeItem('cart')\r\n    },\r\n    setMenu: (state, action) => {\r\n      const info = action.payload.map(info => ({...info, cantidad: 0}))\r\n      state.plates.forEach(plate => {\r\n        const p = info.find(element => element._id === plate._id)\r\n        console.log(p)\r\n        if (p) {\r\n          p.cantidad = plate.cantidad\r\n        }\r\n      })\r\n      state.menu = info\r\n    }\r\n  },\r\n})\r\n\r\nexport const {\r\n  setPlates,\r\n  addPlate,\r\n  removePlate,\r\n  removeAllPlates,\r\n  setMenu,\r\n} = cartSlice.actions\r\n\r\nexport default cartSlice.reducer"],"mappings":"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"},"metadata":{},"sourceType":"module"}