{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nconst initialStateUser = {\n  _id: '',\n  nombre: '',\n  apellido: '',\n  rut: '',\n  contrasenna: '',\n  correo: '',\n  celular: '',\n  fechaCumpleannos: '',\n  rol: '',\n  genero: ''\n};\nconst initialState = {\n  user: {},\n  token: '',\n  modalCrudVisibility: false,\n  selectedUser: initialStateUser,\n  formType: 'create',\n  allUsers: []\n};\nexport const userSlice = createSlice({\n  name: 'user',\n  initialState,\n  reducers: {\n    setUser: (state, action) => {\n      state.user = action.payload;\n\n      if (!localStorage.getItem('user')) {\n        localStorage.setItem('user', JSON.stringify(action.payload));\n      }\n    },\n    setToken: (state, action) => {\n      state.token = action.payload;\n\n      if (!localStorage.getItem('token')) {\n        localStorage.setItem('token', JSON.stringify(action.payload));\n      }\n    },\n    logout: state => {\n      state.token = initialState.token;\n      state.user = initialState.user;\n      localStorage.removeItem('user');\n      localStorage.removeItem('token');\n    },\n    setModalCrudVisibility: (state, action) => {\n      state.modalCrudVisibility = action.payload;\n    },\n    setSelectedUser: (state, action) => {\n      state.selectedUser = action.payload;\n    },\n    resetSelectedUser: state => {\n      state.selectedUser = initialStateUser;\n    },\n    setFormType: (state, action) => {\n      state.formType = action.payload;\n    },\n    setAllUsers: (state, action) => {\n      state.allUsers = action.payload;\n    }\n  }\n});\nexport const {\n  setUser,\n  setToken,\n  logout,\n  setModalCrudVisibility,\n  setSelectedUser,\n  resetSelectedUser,\n  setFormType,\n  setAllUsers\n} = userSlice.actions;\nexport default userSlice.reducer;","map":{"version":3,"names":["createSlice","initialStateUser","_id","nombre","apellido","rut","contrasenna","correo","celular","fechaCumpleannos","rol","genero","initialState","user","token","modalCrudVisibility","selectedUser","formType","allUsers","userSlice","name","reducers","setUser","state","action","payload","localStorage","getItem","setItem","JSON","stringify","setToken","logout","removeItem","setModalCrudVisibility","setSelectedUser","resetSelectedUser","setFormType","setAllUsers","actions","reducer"],"sources":["C:/Users/Draki/Desktop/Front/Restaurant-front/src/store/slices/userSlice.js"],"sourcesContent":["import { createSlice } from '@reduxjs/toolkit'\r\n\r\nconst initialStateUser = {\r\n  _id: '',\r\n  nombre: '',\r\n  apellido: '',\r\n  rut: '',\r\n  contrasenna: '',\r\n  correo: '',\r\n  celular: '',\r\n  fechaCumpleannos: '',\r\n  rol: '',\r\n  genero: '',\r\n}\r\n\r\nconst initialState = {\r\n  user: {},\r\n  token: '',\r\n  modalCrudVisibility: false,\r\n  selectedUser: initialStateUser,\r\n  formType: 'create',\r\n  allUsers: []\r\n}\r\n\r\nexport const userSlice = createSlice({\r\n  name: 'user',\r\n  initialState,\r\n  reducers: {\r\n    setUser: (state, action) => {\r\n      state.user = action.payload\r\n      if (!localStorage.getItem('user')) {\r\n        localStorage.setItem('user', JSON.stringify(action.payload));\r\n      }\r\n    },\r\n    setToken: (state, action) => {\r\n      state.token = action.payload\r\n      if (!localStorage.getItem('token')) {\r\n        localStorage.setItem('token', JSON.stringify(action.payload));\r\n      }\r\n    },\r\n    logout: (state) => {\r\n      state.token = initialState.token\r\n      state.user = initialState.user\r\n      localStorage.removeItem('user')\r\n      localStorage.removeItem('token')\r\n    },\r\n    setModalCrudVisibility: (state, action) => {\r\n      state.modalCrudVisibility = action.payload\r\n    },\r\n    setSelectedUser: (state, action) => {\r\n      state.selectedUser = action.payload\r\n    },\r\n    resetSelectedUser: (state) => {\r\n      state.selectedUser = initialStateUser\r\n    },\r\n    setFormType: (state, action) => {\r\n      state.formType = action.payload\r\n    },\r\n    setAllUsers: (state, action) => {\r\n      state.allUsers = action.payload\r\n    }\r\n  },\r\n})\r\n\r\nexport const {\r\n  setUser,\r\n  setToken,\r\n  logout,\r\n  setModalCrudVisibility,\r\n  setSelectedUser,\r\n  resetSelectedUser,\r\n  setFormType,\r\n  setAllUsers\r\n} = userSlice.actions\r\n\r\nexport default userSlice.reducer"],"mappings":"AAAA,SAASA,WAAT,QAA4B,kBAA5B;AAEA,MAAMC,gBAAgB,GAAG;EACvBC,GAAG,EAAE,EADkB;EAEvBC,MAAM,EAAE,EAFe;EAGvBC,QAAQ,EAAE,EAHa;EAIvBC,GAAG,EAAE,EAJkB;EAKvBC,WAAW,EAAE,EALU;EAMvBC,MAAM,EAAE,EANe;EAOvBC,OAAO,EAAE,EAPc;EAQvBC,gBAAgB,EAAE,EARK;EASvBC,GAAG,EAAE,EATkB;EAUvBC,MAAM,EAAE;AAVe,CAAzB;AAaA,MAAMC,YAAY,GAAG;EACnBC,IAAI,EAAE,EADa;EAEnBC,KAAK,EAAE,EAFY;EAGnBC,mBAAmB,EAAE,KAHF;EAInBC,YAAY,EAAEf,gBAJK;EAKnBgB,QAAQ,EAAE,QALS;EAMnBC,QAAQ,EAAE;AANS,CAArB;AASA,OAAO,MAAMC,SAAS,GAAGnB,WAAW,CAAC;EACnCoB,IAAI,EAAE,MAD6B;EAEnCR,YAFmC;EAGnCS,QAAQ,EAAE;IACRC,OAAO,EAAE,CAACC,KAAD,EAAQC,MAAR,KAAmB;MAC1BD,KAAK,CAACV,IAAN,GAAaW,MAAM,CAACC,OAApB;;MACA,IAAI,CAACC,YAAY,CAACC,OAAb,CAAqB,MAArB,CAAL,EAAmC;QACjCD,YAAY,CAACE,OAAb,CAAqB,MAArB,EAA6BC,IAAI,CAACC,SAAL,CAAeN,MAAM,CAACC,OAAtB,CAA7B;MACD;IACF,CANO;IAORM,QAAQ,EAAE,CAACR,KAAD,EAAQC,MAAR,KAAmB;MAC3BD,KAAK,CAACT,KAAN,GAAcU,MAAM,CAACC,OAArB;;MACA,IAAI,CAACC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAL,EAAoC;QAClCD,YAAY,CAACE,OAAb,CAAqB,OAArB,EAA8BC,IAAI,CAACC,SAAL,CAAeN,MAAM,CAACC,OAAtB,CAA9B;MACD;IACF,CAZO;IAaRO,MAAM,EAAGT,KAAD,IAAW;MACjBA,KAAK,CAACT,KAAN,GAAcF,YAAY,CAACE,KAA3B;MACAS,KAAK,CAACV,IAAN,GAAaD,YAAY,CAACC,IAA1B;MACAa,YAAY,CAACO,UAAb,CAAwB,MAAxB;MACAP,YAAY,CAACO,UAAb,CAAwB,OAAxB;IACD,CAlBO;IAmBRC,sBAAsB,EAAE,CAACX,KAAD,EAAQC,MAAR,KAAmB;MACzCD,KAAK,CAACR,mBAAN,GAA4BS,MAAM,CAACC,OAAnC;IACD,CArBO;IAsBRU,eAAe,EAAE,CAACZ,KAAD,EAAQC,MAAR,KAAmB;MAClCD,KAAK,CAACP,YAAN,GAAqBQ,MAAM,CAACC,OAA5B;IACD,CAxBO;IAyBRW,iBAAiB,EAAGb,KAAD,IAAW;MAC5BA,KAAK,CAACP,YAAN,GAAqBf,gBAArB;IACD,CA3BO;IA4BRoC,WAAW,EAAE,CAACd,KAAD,EAAQC,MAAR,KAAmB;MAC9BD,KAAK,CAACN,QAAN,GAAiBO,MAAM,CAACC,OAAxB;IACD,CA9BO;IA+BRa,WAAW,EAAE,CAACf,KAAD,EAAQC,MAAR,KAAmB;MAC9BD,KAAK,CAACL,QAAN,GAAiBM,MAAM,CAACC,OAAxB;IACD;EAjCO;AAHyB,CAAD,CAA7B;AAwCP,OAAO,MAAM;EACXH,OADW;EAEXS,QAFW;EAGXC,MAHW;EAIXE,sBAJW;EAKXC,eALW;EAMXC,iBANW;EAOXC,WAPW;EAQXC;AARW,IASTnB,SAAS,CAACoB,OATP;AAWP,eAAepB,SAAS,CAACqB,OAAzB"},"metadata":{},"sourceType":"module"}