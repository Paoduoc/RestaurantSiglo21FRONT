{"ast":null,"code":"import axios from 'axios';\nconst serviceApi = 'reserva';\nexport const getAllReservations = async () => {\n  try {\n    const date = new Date();\n    const fechaIngreso = `${date.getFullYear()}-${date.getMonth() + 1}-${date.getDate()}`;\n    const {\n      data\n    } = await axios.get(serviceApi, {\n      params: {\n        fechaIngreso\n      }\n    });\n    return data;\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const startReservation = async _ref => {\n  let {\n    tableId\n  } = _ref;\n\n  try {\n    console.log(tableId);\n    const {\n      data\n    } = await axios.post(serviceApi, {\n      fechaSalida: '',\n      mesa: tableId,\n      reservada: true,\n      sobrecupo: false\n    });\n    return data;\n  } catch (error) {\n    var _error$response;\n\n    console.log(error);\n    return error === null || error === void 0 ? void 0 : (_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.data;\n  }\n};\nexport const endReservation = async _ref2 => {\n  let {\n    _id\n  } = _ref2;\n\n  try {\n    const {\n      data\n    } = await axios.put(`${serviceApi}/${_id}`);\n    return data;\n  } catch (error) {\n    var _error$response2;\n\n    console.log(error);\n    return error === null || error === void 0 ? void 0 : (_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : _error$response2.data;\n  }\n};\nexport const putOvercrowding = async _ref3 => {\n  let {\n    _id,\n    overcrowding\n  } = _ref3;\n\n  try {\n    const {\n      data\n    } = await axios.put(`${serviceApi}/sobrecupo/${_id}`, {\n      sobrecupo: overcrowding\n    });\n    return data;\n  } catch (error) {\n    var _error$response3;\n\n    console.log(error);\n    return error === null || error === void 0 ? void 0 : (_error$response3 = error.response) === null || _error$response3 === void 0 ? void 0 : _error$response3.data;\n  }\n};","map":{"version":3,"names":["axios","serviceApi","getAllReservations","date","Date","fechaIngreso","getFullYear","getMonth","getDate","data","get","params","error","console","log","startReservation","tableId","post","fechaSalida","mesa","reservada","sobrecupo","response","endReservation","_id","put","putOvercrowding","overcrowding"],"sources":["C:/Users/Draki/Desktop/Front/Restaurant-front/src/services/reservationService.js"],"sourcesContent":["import axios from 'axios';\r\n\r\nconst serviceApi = 'reserva'\r\n\r\n\r\nexport const getAllReservations = async () => {\r\n  try {\r\n    const date = new Date()\r\n    const fechaIngreso = `${date.getFullYear()}-${date.getMonth()+1}-${date.getDate()}`\r\n    const { data } = await axios.get(serviceApi, {\r\n      params: {\r\n        fechaIngreso,\r\n      }\r\n    })\r\n    return data\r\n  } catch (error) {\r\n    console.log(error)\r\n  }\r\n}\r\n\r\nexport const startReservation = async ({\r\n  tableId,\r\n}) => {\r\n  try {\r\n    console.log(tableId)\r\n    const { data } = await axios.post(serviceApi, {\r\n      fechaSalida: '',\r\n      mesa: tableId,\r\n      reservada: true,\r\n      sobrecupo: false,\r\n    })\r\n    return data\r\n  } catch (error) {\r\n    console.log(error)\r\n    return error?.response?.data\r\n  }\r\n  \r\n}\r\n\r\nexport const endReservation = async ({\r\n  _id,\r\n}) => {\r\n  try {\r\n    const { data } = await axios.put(`${serviceApi}/${_id}`)\r\n    return data\r\n  } catch (error) {\r\n    console.log(error)\r\n    return error?.response?.data\r\n  }\r\n}\r\n\r\nexport const putOvercrowding = async ({\r\n  _id,\r\n  overcrowding,\r\n}) => {\r\n  try {\r\n    const { data } = await axios.put(`${serviceApi}/sobrecupo/${_id}`, {\r\n      sobrecupo: overcrowding,\r\n    })\r\n    return data\r\n  } catch (error) {\r\n    console.log(error)\r\n    return error?.response?.data\r\n  }\r\n}"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,MAAMC,UAAU,GAAG,SAAnB;AAGA,OAAO,MAAMC,kBAAkB,GAAG,YAAY;EAC5C,IAAI;IACF,MAAMC,IAAI,GAAG,IAAIC,IAAJ,EAAb;IACA,MAAMC,YAAY,GAAI,GAAEF,IAAI,CAACG,WAAL,EAAmB,IAAGH,IAAI,CAACI,QAAL,KAAgB,CAAE,IAAGJ,IAAI,CAACK,OAAL,EAAe,EAAlF;IACA,MAAM;MAAEC;IAAF,IAAW,MAAMT,KAAK,CAACU,GAAN,CAAUT,UAAV,EAAsB;MAC3CU,MAAM,EAAE;QACNN;MADM;IADmC,CAAtB,CAAvB;IAKA,OAAOI,IAAP;EACD,CATD,CASE,OAAOG,KAAP,EAAc;IACdC,OAAO,CAACC,GAAR,CAAYF,KAAZ;EACD;AACF,CAbM;AAeP,OAAO,MAAMG,gBAAgB,GAAG,cAE1B;EAAA,IAFiC;IACrCC;EADqC,CAEjC;;EACJ,IAAI;IACFH,OAAO,CAACC,GAAR,CAAYE,OAAZ;IACA,MAAM;MAAEP;IAAF,IAAW,MAAMT,KAAK,CAACiB,IAAN,CAAWhB,UAAX,EAAuB;MAC5CiB,WAAW,EAAE,EAD+B;MAE5CC,IAAI,EAAEH,OAFsC;MAG5CI,SAAS,EAAE,IAHiC;MAI5CC,SAAS,EAAE;IAJiC,CAAvB,CAAvB;IAMA,OAAOZ,IAAP;EACD,CATD,CASE,OAAOG,KAAP,EAAc;IAAA;;IACdC,OAAO,CAACC,GAAR,CAAYF,KAAZ;IACA,OAAOA,KAAP,aAAOA,KAAP,0CAAOA,KAAK,CAAEU,QAAd,oDAAO,gBAAiBb,IAAxB;EACD;AAEF,CAjBM;AAmBP,OAAO,MAAMc,cAAc,GAAG,eAExB;EAAA,IAF+B;IACnCC;EADmC,CAE/B;;EACJ,IAAI;IACF,MAAM;MAAEf;IAAF,IAAW,MAAMT,KAAK,CAACyB,GAAN,CAAW,GAAExB,UAAW,IAAGuB,GAAI,EAA/B,CAAvB;IACA,OAAOf,IAAP;EACD,CAHD,CAGE,OAAOG,KAAP,EAAc;IAAA;;IACdC,OAAO,CAACC,GAAR,CAAYF,KAAZ;IACA,OAAOA,KAAP,aAAOA,KAAP,2CAAOA,KAAK,CAAEU,QAAd,qDAAO,iBAAiBb,IAAxB;EACD;AACF,CAVM;AAYP,OAAO,MAAMiB,eAAe,GAAG,eAGzB;EAAA,IAHgC;IACpCF,GADoC;IAEpCG;EAFoC,CAGhC;;EACJ,IAAI;IACF,MAAM;MAAElB;IAAF,IAAW,MAAMT,KAAK,CAACyB,GAAN,CAAW,GAAExB,UAAW,cAAauB,GAAI,EAAzC,EAA4C;MACjEH,SAAS,EAAEM;IADsD,CAA5C,CAAvB;IAGA,OAAOlB,IAAP;EACD,CALD,CAKE,OAAOG,KAAP,EAAc;IAAA;;IACdC,OAAO,CAACC,GAAR,CAAYF,KAAZ;IACA,OAAOA,KAAP,aAAOA,KAAP,2CAAOA,KAAK,CAAEU,QAAd,qDAAO,iBAAiBb,IAAxB;EACD;AACF,CAbM"},"metadata":{},"sourceType":"module"}